#!/bin/bash

red='\033[1;31m'
grn='\033[1;32m'
yel='\033[1;33m'
blu='\033[1;36m'
clr='\033[0m'
pnk='\033[1;35m'

chars=2
spacer=' '
newl=''

VERSION="1.09"
function checkVersion()
{
        webVer=$(curl -s https://raw.githubusercontent.com/zaemliss/Constellation/master/nodegrid | grep "VERSION=" | head -1 | tr -d '"' | tr '=' ' ' | awk '{print $2}')
        if [[ "$webVer" != "$VERSION" ]]; then
                echo
                echo -e "${grn} New version available! (${pnk}$webVer${grn})"
                echo -e "${clr}"
                read -e -p " Press Y then [ENTER] to update or N to cancel: " CHOICE
                if [[ ("$CHOICE" == "y" || "$CHOICE" == "Y") ]]; then
                        wget https://raw.githubusercontent.com/zaemliss/Constellation/master/nodegrid -O /usr/local/bin/nodegrid >/dev/null 2>&1
                        echo -e "${grn} nodegrid ${blu}utility updated${clr}"
                        echo
                        exit 1
                fi
        fi
}
checkVersion

LB="http://lb.constellationnetwork.io:9000/cluster/info"
IPS=$(curl -s $LB | jq -r 'sort_by(.ip.host)[] | .ip.host')

count=1
for ip in $IPS; do
  addr=$(curl -s http://$ip:9000/metrics | jq -r .[].address)
  printf -v fcount "%02d" $count
  echo -e "${yel}$fcount$spacer${blu}$ip   \t$addr${clr}"
  imgout="$imgout$fcount$spacer$ip   \t$addr\n"
  ((count++))
done
echo

imgout="$imgout\n__"

echo -ne '  '
count=1
for ip in $IPS; do
  printf -v fcount "%02d" $count
  echo -ne "$spacer$fcount"
  imgout="$imgout$spacer$fcount"
  ((count++))
done

echo -e "\n"
imgout="$imgout\n"
count=1
for ip in $IPS; do
  statuses=$(curl -s $ip:9000/cluster/info | jq -r 'sort_by(.ip.host)[] | "\(.status)"')
  printf -v fcount "%02d" $count
  echo -ne $fcount
  imgout="$imgout$fcount"
  scount=1
  for status in $statuses; do
    smallStatus=$(echo $status | cut -c1-${chars})
    case $status in
        Ready)
                color="${grn}"
                imgcol="■■"
                ;;
        Offline)
                color="${red}"
          	imgcol="»«"
                ;;
        *)
                color="${yel}"
 		imgcol="≡≡"
                ;;
    esac
    if [ $status = "Offline" ]; then
      echo -ne "$spacer${color}■■${clr}";
      imgout="$imgout$spacer$imgcol"
      endResult="${endResult}\n${blu}$ip${clr} sees node #${yel}$scount${clr} in status $color$status${clr}"
      alertResult="${alertResult}\n$ip sees node #$scount in status $status !"
    else
      echo -ne "$spacer${color}■■${clr}";
      imgout="$imgout$spacer$imgcol"
    fi
  ((scount++))
  done
  echo -e $newl
  imgout="$imgout\n"
  ((count++))
done
echo
echo -e "$endResult"

if [[ ${#alertResult} -gt 0 ]]; then
        url='WEBHOOK_URL'
        echo -e $imgout > $HOME/imageout.txt
        convert -size 360x480 xc:black -font "FreeMono" -pointsize 12 -fill white -annotate +15+15 "@$HOME/imageout.txt" image.png
        curl -s -F "file=@image.png" $url
fi

