# Declare Variables
version="1.3"
red='\033[1;31m'
grn='\033[1;32m'
yel='\033[1;33m'
blu='\033[1;36m'
pnk='\033[1;35m'
clr='\033[0m'
IP_LIST=$(ifconfig | grep "inet " | awk {'print $2'} | grep -vE '127.0.0|192.168|172.16|10.0.0' | tr -d 'inet addr:')
IPs=(${IP_LIST[@]})
EXTERNAL_HOST_IP=${IPs[0]}
DAGDIR=$HOME/constellation

function showStatus()
{
        // Can I see the webpage?
        chkWeb=$(curl -s http://89.40.2.86:9000/view/config | grep -c constellation)
        
        // Is the screen containing the node execution active?
        chkScreen=$(screen -ls | grep dag)
        echo
        if [ -z "$chkScreen" ]; then
                echo -e "${blu} Node Status: ${red}offline${clr}"
        else
                echo -e "${blu} Node Status: ${grn}online${clr}"
        fi
        if (( chkWeb > 0 )); then
                echo -e "${blu} Web Status : ${grn}online${clr}"
        else
                echo -e "${blu} Web Status : ${red}offline${clr}"
        fi
}

function showHelp()
{
        echo
        echo -e " ${red}dag command line options ${blu}(utility version: $version)${clr}"
        echo
        echo -e " ${yel} dag update         ${blu}gets the latest version of the jar and overwrites the file in $HOME/constellation ${clr}"
        echo -e " ${yel} dag restart        ${blu}restarts the node ${clr}"
        echo -e " ${yel} dag reset          ${blu}resets the tmp folder and restarts the node removing it from any cluster it belongs to.${clr}"
        echo -e " ${yel} dag status         ${blu}shows you the live node output ${clr}"
        echo -e " ${yel} dag join ip_addr   ${blu}joins to node specified in ip_addr ${clr}"
        echo -e " ${yel} dag leave          ${blu}leaves the cluster ${clr}"
        echo -e " ${yel} dag logs           ${blu}displays the app logs in real time${clr}"
        echo
        echo -e " ${grn}you can navigate to your node via web browser by entering ${blu}http://$EXTERNAL_HOST_IP:9000 ${grn}in the address bar.${clr}"
        echo
}

function showLogs()
{
        echo
        echo -e "${grn} This will show you the current logs. Once you see the node output, exit by pressing ${blu}CTRL-C"
        echo -e "${grn} This only shows the logs and does not interact with the node.${clr}"
        read -e -p " Press [ENTER] to continue or N to cancel: " CHOICE
        if [[ ("$CHOICE" == "n" || "$CHOICE" == "N") ]]; then
        echo -e "${yel} Aborted... ${clr}"
        exit 1;
        fi
        tail -f $DAGDIR/logs/app.log
}

function enterScreen()
{
        echo
        echo -e "${red} IMPORTANT: ${grn}once in the screen where you see the node output, exit by pressing ${blu}CTRL-A ${grn}then ${blu}CTRL-D"
        echo -e "${grn} Do ${red}NOT ${grn}press ${blu}CTRL-C ${grn}unless you are trying to stop the node!${clr}"
        read -e -p "Press [ENTER] to continue or N to cancel: " CHOICE
        if [[ ("$CHOICE" == "n" || "$CHOICE" == "N") ]]; then
        echo -e "${yel} Aborted... ${clr}"
        exit 1;
        fi
        screen -x dag
}

function update()
{
        echo
        echo -e "${blu} Getting latest version and saving to $HOME/constellation ..."
        echo -e "${brn} (this can take a few minutes) ${clr}"
        wget https://github.com/Constellation-Labs/constellation/releases/download/latest/constellation-assembly-latest.jar -O $DAGDIR/constellation-latest.jar >/dev/null 2>&1
        wget https://raw.githubusercontent.com/zaemliss/Constellation/master/dag -O /usr/local/bin/dag >/dev/null 2>&1
        echo -e "${grn} latest Jar updated. Please do ${yel}dag restart${grn} for the changes to take effect.${clr}"
        echo
}

function restart()
{
        echo
        echo -e "${blu} Restarting node ..."
        pgrep java | xargs kill -9 >/dev/null 2>&1

        cd $DAGDIR
        echo -e "${grn} Deploying on $EXTERNAL_HOST_IP ...${clr}"
        bashexec="java -Xmx3G -jar $DAGDIR/constellation-latest.jar --ip $EXTERNAL_HOST_IP --port 9000"
        screen -dmS dag $bashexec
        echo -e "${grn} The node is restarted.${clr}"
        echo
        echo -e "${grn} Type ${yel}dag status${grn} to see node output.${clr}"
        echo
}

function reset()
{
        echo -e " ${red}ARE YOU SURE?{blu} resetting the node will remove it from any cluster!${clr}"
        read -e -p " Press [ENTER] to continue or N to cancel: " CHOICE
        if [[ ("$CHOICE" == "n" || "$CHOICE" == "N") ]]; then
        echo -e "${yel} Aborted... ${clr}"
        exit 1;
        fi

        pgrep java | xargs kill -9 >/dev/null 2>&1
        rm -rf $DAGDIR/tmp/* >/dev/null 2>&1
        rm -rf $DAGDIR/.dag >/dev/null 2>&1

        cd $DAGDIR
        echo -e "${grn} Terminating instance, resetting tmp folder and deploying on $EXTERNAL_HOST_IP ...${clr}"
        bashexec="java -Xmx3G -jar $DAGDIR/constellation-latest.jar --ip $EXTERNAL_HOST_IP --port 9000"
        screen -dmS dag $bashexec
        echo -e "${grn} The node is reset and started.${clr}"
        echo
}

if [[ $1 == "update" ]]; then
        update
fi

if [[ $1 == "restart" ]]; then
        restart
fi

if [[ $1 == "reset" ]]; then
        echo
        echo -e "${blu} Resetting node ..."
        reset
        echo -e "${grn} Type ${yel}dag status${grn} to see node output.${clr}"
        echo
fi

if [[ $1 == "status" ]]; then
        enterScreen
fi

if [[ $1 == "logs" ]]; then
        showLogs
fi

if [[ $1 == "" ]]; then
        showStatus
        showHelp
fi

if [[ $1 == "join" ]]; then
        if [[ $2 == "" ]]; then
                echo
                echo -e "${red} you must specify an IP address!"
                echo -e "${grn} Ex.: ${yel}dag join 20.145.2.11 ${clr}"
                echo -e
                exit 1
        fi
        echo
        echo -e "${grn} Joining $2 ...${clr}"
        curl -X POST http://$EXTERNAL_HOST_IP:9001/join -H "Content-type: application/json" -d '{ "host": "'$2'", "port": 9001 }' -v
        if [ $? -ne 0 ]; then
        echo
        echo -e "${red}Joining node ${yel}$2 ${red}failed! ${clr}"
        exit 1;
    fi
fi

if [[ $1 == "leave" ]]; then
        echo
        echo -e "${grn} Leaving cluster ...${clr}"
        curl -X POST http://$EXTERNAL_HOST_IP:9001/leave -v
fi
