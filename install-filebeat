#!/bin/bash

# Declare Variables ###############################
red='\033[1;31m'
grn='\033[1;32m'
yel='\033[1;33m'
blu='\033[1;36m'
pnk='\033[1;35m'
clr='\033[0m'
DAGDIR=$HOME/constellation

echo -ne "${grn} getting external IP address... ";
EXTERNAL_HOST_IP=$(curl -s https://api.ipify.org)
echo -e "${yel}$EXTERNAL_HOST_IP ${clr}";
echo

# DECLARE FUNCTIONS ##################
function checkCert()
{
  if [ ! -f ./*.p12 ]; then
    echo -e "${red} Certification File not found! ${yel}Please make sure you download your .p12 file here before running the installer!${clr}"
    echo -e "${red} Installation Aborted.${clr}"
    echo
    exit 1
  fi
  certfile=$(ls *.p12)
  echo -e "${grn} Found cert file ${blu}$certfile${clr}"
  echo
}

function installFilebeat()
{
  echo -e "${grn} Installing Filebeat ...${clr}"
  curl -L -O -s https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.4.1-amd64.deb
  sudo dpkg -i filebeat-7.4.1-amd64.deb
  systemctl enable filebeat
  echo
}

function extractCerts()
{
  echo -ne "Please input cert password : "
  CERTPWD=''
  while IFS= read -r -s -n1 pass; do
    if [ -z "$pass" ]; then
      echo
      break
    else
      printf '*'
      CERTPWD="$CERTPWD$pass"
    fi
  done
  echo -e "${grn} extracting certs ..."
  openssl pkcs12 -in $certfile -password pass:$CERTPWD -nocerts -nodes > client.key
  openssl pkcs12 -in $certfile -password pass:$CERTPWD -clcerts -nokeys > client.cer
  openssl pkcs12 -in $certfile -password pass:$CERTPWD -cacerts -nokeys -chain > client-ca.cer
  if [[ $? -ne 0 ]]; then
    echo -e "${red} ERROR - wrong password or general failure. Please check your password and start over. ${clr}"
    echo -e "${red} Installation Aborted.${clr}"
    echo
    exit 1
  fi
}


# BEGIN ###############################

checkCert
installFilebeat
extractCerts
